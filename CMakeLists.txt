cmake_minimum_required(VERSION 3.9...3.14)
project(GPU-TREECODE VERSION 0.5 LANGUAGES C)

set(default_build_type "Release")

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    message(STATUS "Setting build type to '${default_build_type}' as none was specified.")
    
    set(CMAKE_BUILD_TYPE "${default_build_type}" CACHE
        STRING "Choose the type of build." FORCE)

    # Set the possible values of build type for cmake-gui or ccmake
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
                "Debug" "Release" "None")
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)

option(BUILD_TREECODE "build treecode computation executables"                 ON)
option(BUILD_DIRECT "build direct computation executables"                     ON)

option(BUILD_TREE_LIBRARIES "build tree libraries for use with external codes" ON)
option(BUILD_EXAMPLES "build examples using the libraries"                     ON)
option(BUILD_SHARED_LIBS "if building tree libraries, build as shared"         OFF)

option(ENABLE_GPU_BUILD "build OpenACC GPU version"                            ON)
option(ENABLE_CPU_BUILD "build CPU version"                                    ON)

find_package(OpenMP REQUIRED)

#Some PGI versions seem to require a link flag for OpenMP
set_property(TARGET OpenMP::OpenMP_C APPEND
                                     PROPERTY
                                         INTERFACE_LINK_LIBRARIES
                                         $<$<C_COMPILER_ID:PGI>:-mp>) 

#Creating an interface for OpenACC
add_library(OpenACC_C INTERFACE)
set_property(TARGET OpenACC_C        PROPERTY
                                         INTERFACE_COMPILE_OPTIONS
                                         -acc
                                         -ta=tesla:ccall,cc60$<$<CONFIG:Debug>:,time>
                                         $<$<AND:$<CONFIG:Debug>,$<C_COMPILER_ID:PGI>>:
                                             -Minfo=all>)
set_property(TARGET OpenACC_C        PROPERTY
                                         INTERFACE_LINK_LIBRARIES
                                         -acc
                                         -ta=tesla:ccall,cc60)

if(ENABLE_GPU_BUILD AND NOT (CMAKE_C_COMPILER_ID MATCHES PGI))
    message("GPU build requires PGI compilers! Turning GPU build off.")
    set(ENABLE_GPU_BUILD OFF)
endif()

add_subdirectory(src)
add_subdirectory(examples)
